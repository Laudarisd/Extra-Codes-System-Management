""" Thank you for the best webpage : https://www.w3resource.com/python-exercises/basic/

if you want more exercises then you can visit mentioned source.

created: 10th december 2019
Laudari Sudip

"""





# 1. write a python program to print to stderr
# from __future__ import  print_function
# import sys
#
# def eprint(*args, **kwargs):
#     print(*args, file =sys.stderr, **kwargs)
# eprint("abc", "efg", "xyz", sep = "--")

#----------------------------------------------------------------------------------------------
#2. write a python program to access environment variables
# import os
# # access all environment variables
# print(os.environ)
# print('*---------------------------*')
# print(os.environ['Home'])
# ---------------------------------------------------------------------------------------------
# 3. write the python program to get the current username
# import getpass
# print(getpass.getuser())
# ----------------------------------------------------------------------------------------
#4. write a python program to get height and width of the console window
# def terminal_size():
#     import fcntl, termios, struct
#     th, tw, hp, wp = struct.unpack('HHHH' ,
#         fcntl.ioctl(0, termios.TIOCGWINSZ,
#         struct.pack('HHHH',0,0,0,0)))
#     return tw, th
# print('Number of columns and Rows: ', terminal_size)
# -----------------------------------------------------------------------------------------------------
#5. write a python program to sum of the fist n positive integers

# n = int(input("Input a number: "))
# sum_num = (n * (n+1))/2
# print(sum_num)

#----------------------------------------------------------------------------------------------

#6. write a python program to calculate the hypotenuse of a right angled triangle
from math import sqrt

base = 4
height = 6
hypotenus = sqrt(base **2 + height ** 2)

print(hypotenus)

#-------------------------------------------------------------------------------------------
#7. write a python program to get all units of time into seconds
#
# days = int(input("Input days: ")) * 3600 * 24
# hours = int(input("Input hours: ")) * 3600
# minutes = int(input("Input minutes: ")) * 60
# seconds = int(input("Input seconds: "))
#
# time = days + hours + minutes + seconds
#
# print("The  amounts of seconds", time)

#---------------------------------------------------------------------------------------------------------
# 8. Write a Python program to get file creation and modification date/times
# import os.path, time
# print("Last modified : %s" % time.ctime(os.path.getmtime("test.txt")))
# print("Created: %s " % time.ctime(os.path.getctime("test.txt")))

#----------------------------------------------------------------------------------------------------

#9. write a python program to convert seconds to day, hour, minutes and seconds

# time = float(input("Input time in seconds: "))
# day = time //(24 *3600)
# time = time % (24 * 3600)
# hour = time // 3600
# time %= 3600
#
# minutes = time // 60
# time %= 60
# seconds = time
# print("d:h:m:s -> %d: %d:%d:%d" % (day, hour, minutes, seconds))

#-----------------------------------------------------------------------------------------------------

#10. write a python program to sort files by date
import glob
import os

files = glob.glob("*.txt")
files.sort(key = os.path.getctime)
print("\n".join(files))
#--------------------------------------------------------------------------------------------------
# write a python program to get a directory listing, sorted by creation date.
from stat import S_ISREG, ST_CTIME, ST_MODE
import os, sys, time

dir_path = sys.stgv[1] if len(sys.argv) == 2 else r'.'
#---------------------------------------------------------------------------------------------------
#12. write a python program to get the deatils of math module
import math
math_ls = dir(math)
print(math_ls)
 #---------------------------------------------------------------------------------------------------

#13. write a python program to get the copyright information

import sys
print(sys.copyright)
#------------------------------------------------------------------------------------------------------
#14. write a python program to test whether all number of a list is greater than a certain number
num = [2,3,5]
print()
print(all(x >1 for x in num))
print(all(x>4 for x in num))
print()
#--------------------------------------------------------------------------------------------------------
# 15. write a python program to count the number occurrence of a apecific character in a string.
s = "The quick brown fox jumps over the lazy dog."
print(s.count("q"))
#------------------------------------------------------------------------------------------------
#16. write a python program to access and print a URL's content to the console
from http.client import HTTPConnection
conn = HTTPConnection("example.com")
conn.request("Get","/")
result = conn.getresponse()
contents = result.read()
print(contents)

#-----------------------------------------------------------------------------------------------------
# 17. check if a number is positive, negative or zero
# num = float(input("Input a number : "))
# if num > 0:
#     print("It is positive number")
# elif num == 0:
#     print("It is zero")
# else:
#     print("It is negative number")

# ------------------------------------------------------------------------------------------------------
# 18. write a python program to get numbers divisible by fifteen from a list using an anonymous function
num_list = [45, 55, 60, 37, 100, 105, 220]
# use anonymous function,i.e lambda function
result = list(filter(lambda x: (x % 15 == 0),num_list))
print("Numbers divisible by 15 are", result)

#---------------------------------------------------------------------------------------------
# 19. write a python program to filter the positive numbers from a list
num = [2,5,6,0,7,-1,9]
new_num = list(filter(lambda x: x>0, num))
print(new_num)

#---------------------------------------------------------------------------------------------------------
# 20. write a python program to determine if variable defined or not .

try:
    x = 1
except NameError:
    prnit("Variable is not defined")
else:
    print("Variable is defined")
try:
    y
except NameError:
    print("Variable is not defined")
else:
    print("variable is defined")

#---------------------------------------------------------------------------------------------------------------
#  21.write a python program to know valid IP
import socket
addr = '192.168.0.90'
try:
    socket.inet_aton(addr)
    print("Valid IP")
except socket.error:
    print("Invalid IP")
#---------------------------------------------------------------------------------------------------------------
# 22. write a python program to create all possible strings by using 'a', 'e','i','o','u'. Use the characters exactly once
import random
char_list = ['a','e','i','o','u']
random.shuffle(char_list)
print(''.join(char_list))
#------------------------------------------------------------------------------------------------------------
#23. write a python program to remove and print every third number from a list of numbers until the list becomes empty
"""
def remove_nums(int_list):
    #list starts with 0
    position = 3-1
    idx = 0
    len_list = (len(int_list))
    while len_list > 0:
        idx = (position + idx)% len_list
        print(int_list.pop(idx))
        len_list -= 1
nums = [10,20,20,30,40,50,60,70,80,80,30,40]
remove_nums(nums)

"""
#---------------------------------------------------------------------------------------------------------------------
#24. write a python program to find unique triplets whose three elements gives the sum of zero from an array of n integers
# def three_sum(nums):
#     result = []
#     nums.sort()
#     for i in range(len(nums)-2):
#         if i>0 and nums[i] == nums [i-1]:
#             continue
#         l,r = i+1, len(nums)-1
#         while l < r:
#             s = nums[i] + nums[l] + nums[r]
#             if s> 0:
#                 r -= 1
#             elif s < 0:
#                 l += 1
#             else:
#                 result.append((nums[i], nums[l],nums[r])) # found three sum
#                 while l < r and nums [l] == nums [l +1]: #remove duplicates
#                     l += 1
#                     while l < r and nums [r] == nums [r -1]:
#                         r -= 1
#                         l += 1
#                         r -= 1
#                         return result
# x = [1,-6,4,2,-1,2,0,-2,0]
# print(three_sum(x))

#------------------------------------------------------------------------------------------------------
# 25. write a python program to create the combinations of 3 digit combo
numbers = []
for num in range(1000):
    num = str(num).zfill(3)
print(num)
numbers.append(num)

#------------------------------------------------------------------------------------------------------
# 26. write a python program to count the number of each character of a given text of a file
"""
import collections
import pprint
file_input = input('File Name')
with open(file_input,'r') as info:
    count = colletions.Counter(info.read().upper())
    value = pprint.pformat(count)
print(value)
"""

#-----------------------------------------------------------------------------------
# 25. write a python program to get the top stories from Google news.
"""
import bs4
from bs4 import BeautifulSoup as soup
from urlib.request import urlopen

news_url ="https://news.google.com/news/rss"
Client = urlopen(news_url)
xml_pae = Client.read()
Client.close()

soup_page=soup(xml_page,"xml")
news_list=soup_page.findAll("item")
# Print news title, url and publish date
for news in news_list:
  print(news.title.text)
  print(news.link.text)
  print(news.pubDate.text)
  print("-"*60)
"""

#--------------------------------------------------------------------------------------
# 26.Write a Python program to check the sum of three elements (each from an array) from three arrays is equal to a target value. Print all those three-element combinations.
"""
import itertools
from functools import partial
X = [10, 20, 20, 20]
Y = [10, 20, 30, 40]
Z = [10, 30, 40, 20]
T = 70

def check_sum_array(N, *nums):
  if sum(x for x in nums) == N:
    return (True, nums)
  else:
      return (False, nums)
pro = itertools.product(X,Y,Z)
func = partial(check_sum_array, T)
sums = list(itertools.starmap(func, pro))

result = set()
for s in sums:
    if s[0] == True and s[1] not in result:
      result.add(s[1])
      print(result)

"""

#------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#27. write a python program to create all possible permutations from a given collection of distinct numbers


def permute(nums):
    result_perms = [[]]
    for n in nums:
        new_perms = []
        for perm in result_perms :
            for i in range(len(perm)+1):
                new_perms.append(perm[:i] + [n] + perm[i:])
                result_perms = new_perms
    return result_perms


my_nums = [1,2,3]

print(" original Cofllection:", my_nums)
print("Collection of distinct numbers:\n", permute(my_nums))
#---------------------------------------------------------------------------------------------
# 28. Write a Python program to get all possible two digit letter combinations from a digit (1 to 9) string.
def letter_combinations(digits):
    if digits == "":
        return []
    string_maps = {
        "1": "abc",
        "2": "def",
        "3": "ghi",
        "4": "jkl",
        "5": "mno",
        "6": "pqrs",
        "7": "tuv",
        "8": "wxy",
        "9": "z"
    }
    result = [""]
    for num in digits:
        temp = []
        for an in result:
            for char in string_maps[num]:
                temp.append(an + char)
        result = temp
    return result

digit_string = "47"
print(letter_combinations(digit_string))
digit_string = "29"
print(letter_combinations(digit_string))

#---------------------------------------------------------------------------------------------------

#29. write a python program to find a median from given 3 numbers
"""
x = input("Input the first number")
y = input("Input the second number")
z = input("Input the third number")
print("Median of the above three numbers -")

if y < x and x < z :
    print(x)
elif z < x and x < y :
    print(x)
elif z < y and y < x :
    print(y)
elif x < y and y < z :
    print(y)
elif y < z  and z < x :
    print(z)
elif x < z and z < y :
    print(z)

"""
#----------------------------------------------------------------------------------------------
#30 write a python program to find the number of divisors of a given integer is even or odd

def divisor(n):
    for i in range(n):
        x = len([i for i in range(1,n+1) if not n % i])
    return x
print(divisor(15))

#------------------------------------------------------
#31. write a python program to find the digits which are absent in a given mobile number
def absent_digits(n):
    all_nums = set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ])
    n = set([int(i) for i in n])
    n = n.symmetric_difference(all_nums)
    n = sorted(n)
    return n
print(absent_digits([9,8,3,2]))

#--------------------------------------------------------------------------------------
#32. The price of a given stock on each day is stored in an array. Write a python program to the maximum profit in one transaction.
#i.e. buy one and sell one share of the stock from the given price value of the said array. You cannot sell a stock before you buy one.
def max_profit(stock_price):
    max_profit_amt = 0

    for i in range(len(stock_price)):
        profit_amt = 0
        for j in range(i+1, len(stock_price)):
            profit_amt = stock_price[j] - stock_price[i]
            if profit_amt > max_profit_amt:
                max_profit_amt = profit_amt
        return  max_profit_amt

print(max_profit([224, 236, 247, 258, 259, 225]))


# ----------------------------------------------------------------------------------------------
#33. 




